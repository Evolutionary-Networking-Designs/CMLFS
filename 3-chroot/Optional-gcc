# Final System: GCC (optional)
# Source: https://dev.alpinelinux.org/~nenolod/gcc-10.2.1_pre2.tar.xz
# Source: http://isl.gforge.inria.fr/isl-0.23.tar.bz2
# This section is done in Chroot environment

# GCC source tarball is a snapshot from Alpine Linux
# **Install GCC is optional as most packages can be built with clang.**

case $(uname -m) in
  x86_64) export TRUPLE="x86_64-linux-musl"
          export EXTRA_CONFIG=" --with-arch=x86-64"
          ;;
  i686)   export TRUPLE="i686-linux-musl"
          export EXTRA_CONFIG=" --with-arch=pentium3 --with-tune=pentium-m"
          ;;
  armv7l) export TRUPLE="armv7l-linux-musleabihf"
          export EXTRA_CONFIG=" --with-arch=armv7-a --with-tune=generic-armv7-a --with-fpu=vfpv3-d16 --with-float=hard --with-abi=aapcs-linux --with-mode=thumb"
          ;;
  armv6l) export TRUPLE="armv6l-linux-musleabihf"
          export EXTRA_CONFIG=" --with-arch=armv6zk --with-tune=arm1176jzf-s --with-fpu=vfp --with-float=hard --with-abi=aapcs-linux"
          ;;
  aarch64) export TRUPLE="aarch64-linux-musleabihf"
           export EXTRA_CONFIG=" --with-arch=armv8-a --with-abi=lp64 --enable-fix-cortex-a53-835769 --enable-fix-cortex-a53-843419"
           sed -i '/m64=/s/lib64/lib/' gcc/config/aarch64/t-aarch64-linux
          ;;
esac &&

case $(uname -m) in
     arm*) export LIBITM=false ;;
esac &&

tar -xf ../pkgs/isl-0.23.tar.xz &&
mv -v isl-0.23 isl         &&

for p in 0001-posix_memalign.patch \
        0002-gcc-poison-system-directories.patch \
        0003-Turn-on-Wl-z-relro-z-now-by-default.patch \
        0004-Turn-on-D_FORTIFY_SOURCE-2-by-default-for-C-C-ObjC-O.patch \
        0005-On-linux-targets-pass-as-needed-by-default-to-the-li.patch \
        0006-Enable-Wformat-and-Wformat-security-by-default.patch \
        0007-Enable-Wtrampolines-by-default.patch \
        0008-Disable-ssp-on-nostdlib-nodefaultlibs-and-ffreestand.patch \
        0009-Ensure-that-msgfmt-doesn-t-encounter-problems-during.patch \
        0010-Don-t-declare-asprintf-if-defined-as-a-macro.patch \
        0011-libiberty-copy-PIC-objects-during-build-process.patch \
        0012-libitm-disable-FORTIFY.patch \
        0013-libgcc_s.patch \
        0014-nopie.patch \
        0015-libffi-use-__linux__-instead-of-__gnu_linux__-for-mu.patch \
        0016-dlang-update-zlib-binding.patch \
        0017-dlang-fix-fcntl-on-mips-add-libucontext-dep.patch \
        0018-ada-fix-shared-linking.patch \
        0019-build-fix-CXXFLAGS_FOR_BUILD-passing.patch \
        0020-add-fortify-headers-paths.patch \
        0021-Alpine-musl-package-provides-libssp_nonshared.a.-We-.patch \
        0022-DP-Use-push-state-pop-state-for-gold-as-well-when-li.patch \
        0023-Pure-64-bit-MIPS.patch \
        0024-use-pure-64-bit-configuration-where-appropriate.patch \
        0025-always-build-libgcc_eh.a.patch \
        0026-ada-libgnarl-compatibility-for-musl.patch \
        0027-ada-musl-support-fixes.patch \
        0028-gcc-go-Use-_off_t-type-instead-of-_loff_t.patch \
        0029-gcc-go-Don-t-include-sys-user.h.patch \
        0030-gcc-go-Fix-ucontext_t-on-PPC64.patch \
        0031-gcc-go-Fix-handling-of-signal-34-on-musl.patch \
        0032-gcc-go-Use-int64-type-as-offset-argument-for-mmap.patch \
        0033-gcc-go-Fix-st_-a-m-c-tim-fields-in-generated-sysinfo.patch \
        0034-gcc-go-signal-34-is-special-on-musl-libc.patch \
        0035-gcc-go-Prefer-_off_t-over-_off64_t.patch \
        0036-gcc-go-undef-SETCONTEXT_CLOBBERS_TLS-in-proc.c.patch \
        0037-gcc-go-link-to-libucontext.patch \
        0038-gcc-go-Disable-printing-of-unaccessible-ppc64-struct.patch \
        0039-CRuntime_Musl-Support-v1.2.0-for-32-bits.patch \
        0040-configure-Add-enable-autolink-libatomic-use-in-LINK_.patch
do
        patch -Np1 -i ../patches/gcc-alpine-10.2.1p2/$p
done && \

case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
  ;;
  aarch64)
    sed -e '/mabi.lp64=/s/lib64/lib/' \
        -i.orig gcc/config/aarch64/t-aarch64-linux
  ;;
esac &&

# Create symlinks as GCC is not the primary system compiler
ln -sv /usr/include/zconf.h /opt/gnu/include/
ln -sv /usr/include/zlib .h /opt/gnu/include/
ln -sv /lib/libz.so.1.2.11 /opt/gnu/lib/
ln -sv /lib/libz.so.1.2.11 /opt/gnu/lib/libz.so
ln -sv /lib/libz.so.1.2.11 /opt/gnu/lib/libz.so.1
ln -sv  /usr/lib/libc.so /opt/gnu/lib/libc.musl-x86_64.so.1

# Build in a dedicated directory
mkdir -v build && cd build

# Configure source to use binary tools in /cross-tools
CC=x86_64-mlfs-linux-musl-gcc \
CXX=x86_64-mlfs-linux-musl-g++ \
AR=x86_64-mlfs-linux-musl-ar \
AS=x86_64-mlfs-linux-musl-as \
RANLIB=x86_64-mlfs-linux-musl-ranlib \
LD=x86_64-mlfs-linux-musl-ld \
STRIP=x86_64-mlfs-linux-musl-strip \
CFLAGS="-L/lib -L/usr/lib -L/opt/gnu/lib -I/opt/gnu/include" \
CXFLAGS="-L/lib -L/usr/lib -L/opt/gnu/lib -I/opt/gnu/include" \
SED=sed  libat_cv_have_ifunc=no       \
../configure --prefix=/opt/gnu            \
             --build="${TRUPLE}"\
             --with-system-zlib       \
             --with-isl \
             --with-linker-hash-style=gnu \
             --enable-languages=c,c++ \
             --enable-threads=posix \
             --enable-clocale=generic \
             --enable-tls \
             --enable-libstdcxx-time \
             --enable-fully-dynamic-string \
             --enable-default-pie \
             --enable-default-ssp \
             --enable-linker-build-id \
	     --enable-checking=release \
	     --enable-cloog-backend \
	     --enable-__cxa_atexit  \
	     --enable-lto \
	     --enable-plugins \
             --disable-libstdcxx-pch \
             --disable-nls \
             --disable-multilib       \
             --disable-bootstrap      \
             --disable-symvers \
             --disable-libsanitizer \
             --disable-libssp \
	     --disable-libmpx \
             --disable-libmudflap \
	     --disable-fixed-point \
	     --disable-sjlj-exceptions \
	     --disable-werror $EXTRA_CONFIG \
             --with-mpc=/opt/gnu --with-gmp=/opt/gnu --with-mpfr=/opt/gnu \
             --with-pkgversion="CMLFS 1.0" &&

# modify build/gcc/MakeFile
# Add -L/lib so linker can find libz.so in /lib
#T_CFLAGS = -L/lib
#TCFLAGS = -L/lib

make && make install

mkdir -pv /opt/gnu/lib
ln -sv ../bin/cpp /opt/gnu/lib/cpp
ln -sv gcc /opt/gnu/bin/cc
install -v -dm755 /opt/gnu/lib/bfd-plugins
ln -sv  ../../libexec/gcc/x86_64-pc-linux-musl/10.2.1/liblto_plugin.so \
        /opt/gnu/lib/bfd-plugins/
mkdir -pv /opt/gnu/share/gdb/auto-load/usr/lib
mv -v /opt/gnu/lib/*gdb.py /opt/gnu/share/gdb/auto-load/usr/lib
unset LIBITM


