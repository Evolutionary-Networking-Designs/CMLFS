# Llvmtools Chain: GCC
# Build and install as cmlfs

# Additional sources to add as GCC requires them 
xz -cd ../pkgs/mpfr-4.1.0.tar.xz | tar -xf -
mv -v mpfr-4.1.0 mpfr
xz -cd ../pkgs/gmp-6.2.1.tar.xz | tar -xf -
mv -v gmp-6.2.1 gmp
gunzip -cd ../pkgs/mpc-1.2.1.tar.gz | tar -xf -
mv -v mpc-1.2.1 mpc

# Apply patches [from Alpine-linux]
bash ../patches/gcc-10.3.1_git20210424-alpine/apply_patches_ct.sh

# change the location of GCC's default dynamic linker to use the one installed in /llvmtools
#
# For i686/x86_64:
for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/llvmtools&@g' \
      -e 's@/usr@/llvmtools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/llvmtools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

# Configure in dedicated build directory
mkdir -v build && cd build

# GCC can only be compiled by GCC
CC="${CMLFS_TARGET}-gcc"    \
CXX="${CMLFS_TARGET}-g++"   \
AR="${CMLFS_TARGET}-ar"     \
AS="${CMLFS_TARGET}-as"     \
RANLIB="${CMLFS_TARGET}-ranlib"     \
LD="${CMLFS_TARGET}-ld"             \
STRIP="${CMLFS_TARGET}-strip"       \
CC_FOR_BUILD="${CMLFS_TARGET}-gcc"  \
CXX_FOR_BUILD="${CMLFS_TARGET}-g++" \
CFLAGS='-g0 -O0' \
CXXFLAGS='-g0 -O0' \
../configure                                       \
    --target=${CMLFS_TARGET}                        \
    --build=${CMLFS_HOST}                           \
    --host=${CMLFS_TARGET}                          \
    --prefix=/llvmtools                             \
    --with-local-prefix=/llvmtools                  \
    --with-native-system-header-dir=/llvmtools/include \
    --enable-languages=c,c++                       \
    --disable-libstdcxx-pch                        \
    --disable-multilib                             \
    --disable-bootstrap                            \
    --disable-libgomp                              \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-symvers                              \
    --disable-libitm                               \
    --disable-libsanitizer

# Build - Set the PATHs for binaries and PATHs for libraries
PATH=/llvmtools/bin:/cgnutools/bin:/usr/bin:/bin \
LD_LIBRARY_PATH=/llvmtools/lib:/cgnutools/x86_64-cmlfs-linux-musl/lib:/cgnutools/lib:/usr/lib:/lib \
make

# Install
make install

# Re-create internal header for GCC installed in llvmtools/gnu since
# the internal header that has just been installed is a partial, 
# self-contained file and does not include the extended features of the system header
cp -v /llvmtools/lib/gcc/x86_64-cmlfs-linux-musl/10.3.1/include-fixed/limits.h \
      /llvmtools/lib/gcc/x86_64-cmlfs-linux-musl/10.3.1/include-fixed/limits.h.old
cat ../gcc/limitx.h ../gcc/glimits.h ../gcc/limity.h > \
    /llvmtools/lib/gcc/x86_64-cmlfs-linux-musl/10.3.1/include-fixed/limits.h

# Many programs and scripts run cc instead of gcc, provide a link
ln -sv gcc /llvmtools/bin/cc

# Can't remember why this was done
#GCC_INCLUDEDIR=`dirname $(${CMLFS_TARGET}-gcc -print-libgcc-file-name)`/include &&
#find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
#rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
#unset GCC_INCLUDEDIR

# Test GCC portion of the toolchain
echo 'int main(){}' > dummy.c &&
/llvmtools/bin/cc dummy.c
readelf -l a.out | grep ': /llvmtools'

# Should output:
# [Requesting program interpreter: /llvmtools/lib/ld-musl-x86_64.so.1]

# If all is well, remove the test files
rm -v dummy.c a.out
